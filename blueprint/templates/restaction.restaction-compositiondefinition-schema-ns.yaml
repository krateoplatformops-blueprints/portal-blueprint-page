apiVersion: templates.krateo.io/v1
kind: RESTAction
metadata:
  name: {{ .Release.Name }}-restaction-compositiondefinition-schema-ns
  namespace: {{ .Release.Namespace }}
spec:
  api:
  - name: getCompositionDefinition
    path: "/apis/core.krateo.io/v1alpha1/namespaces/{{ .Release.Namespace }}/compositiondefinitions/{{ .Release.Name }}"
    verb: GET
    headers:
    - 'Accept: application/json'
  - name: getCompositionDefinitionResource
    path: "/apis/core.krateo.io/v1alpha1/namespaces/{{ .Release.Namespace }}/compositiondefinitions/{{ .Release.Name }}"
    verb: GET
    headers:
    - 'Accept: application/json'
    filter: ".getCompositionDefinitionResource.status.resource"
  - name: getOrderedSchema
    path: ${ "/apis/apiextensions.k8s.io/v1/customresourcedefinitions/" + (.getCompositionDefinitionResource) + ".composition.krateo.io" }
    verb: GET
    headers:
    - 'Accept: application/json'
    dependsOn: 
      name: getCompositionDefinitionResource
    filter: >
      .getOrderedSchema.spec.versions[] | select(.name == "v{{ .Values.blueprint.version | replace "." "-" }}") | .schema.openAPIV3Schema.properties.spec
  - name: getNotOrderedSchema
    path: ${ "/api/v1/namespaces/{{ .Release.Namespace }}/configmaps/" + (.getCompositionDefinitionResource) + "-v{{ .Values.blueprint.version | replace "." "-" }}-jsonschema-configmap" }
    verb: GET
    headers:
    - 'Accept: application/json'
    dependsOn: 
      name: getCompositionDefinitionResource
    filter: ".getNotOrderedSchema.data"
  - name: getNamespaces
    path: "/api/v1/namespaces"
    filter: "[.getNamespaces.items[] | .metadata.name]"
  filter: >
    {
      getOrderedSchema: .getOrderedSchema,
      getNotOrderedSchema: .getNotOrderedSchema,
      getCompositionDefinition: .getCompositionDefinition,
      getCompositionDefinitionResource: .getCompositionDefinitionResource,
      possibleNamespacesForComposition:
      [
        .getNamespaces[] as $ns |
        {
          resource: .getCompositionDefinitionResource,
          namespace: $ns
        }
      ]
    }